# -*- coding: utf-8 -*-
"""Tabnet_Inference.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zsW5qIO374rpw2nzzmw4i75A-2-UVwV1
"""

import numpy as np
import pandas as pd
import os
import torch
import torch.nn as nn
import torch.optim as optim
from torch.optim.lr_scheduler import ReduceLROnPlateau
from glob import glob
from joblib import Parallel, delayed
from pytorch_tabnet.metrics import Metric
from pytorch_tabnet.tab_model import TabNetRegressor

book_testparquet = pd.read_parquet("../input/dataset/data.parquet/stock_id=0")

def get_dataset(ids : list, dataType = 'train'):
  stock_stat = Parallel(n_jobs=-1)(
      delayed(get_stock_stat)(stock_id, dataType) 
      for stock_id in ids
  )

  stock_stat_df = pd.concat(stock_stat, ignore_index = True)

  return stock_stat_df

test = pd.read_csv(os.path.join(ROOT_DIR, 'test.csv'))

test_stock_stat_df = get_dataset(ids = test['id'].unique(), dataType = 'test')
test_dataset = test_dataset.drop(['id', 'name'], axis = 1)

y_pred = test_dataset[['label']]
X_test = test_dataset.drop(['label'], axis = 1).fillna(0)

clf = TabNetRegressor()
clf.load_model('tabnet-model.zip')

y_pred = y_pred.assign(target = clf.predict(X_test.values))
y_pred.to_csv('result_table.csv',index = False)